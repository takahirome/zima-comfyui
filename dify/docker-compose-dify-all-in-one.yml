version: "3.8"

services:
  # 初期化コンテナ - 必要なディレクトリとファイルを作成
  dify-init:
    container_name: dify-init
    image: alpine:latest
    command: |
      sh -c "
        echo 'Setting up Dify directories and files...';
        mkdir -p /data/storage /data/db /data/redis /data/weaviate /data/sandbox /data/plugin-daemon;
        if [ ! -f /data/sandbox/python-requirements.txt ]; then
          cp /tmp/python-requirements.txt /data/sandbox/python-requirements.txt;
          echo 'Created python-requirements.txt';
        fi;
        if [ ! -f /data/sandbox/package.json ]; then
          cp /tmp/package.json /data/sandbox/package.json;
          echo 'Created package.json';
        fi;
        chmod -R 755 /data/;
        echo 'Dify setup completed!';
      "
    volumes:
      - /DATA/AppData/Dify:/data
    configs:
      - source: python_requirements
        target: /tmp/python-requirements.txt
      - source: nodejs_package
        target: /tmp/package.json
    restart: "no"

  dify-api:
    container_name: dify-api
    image: langgenius/dify-api:1.4.2
    deploy:
      resources:
        reservations:
          memory: "1073741824"
        limits:
          memory: 6144M
    environment:
      - MODE=api
      - LOG_LEVEL=INFO
      - SECRET_KEY=sk-9f73s3ljTXVcMT3Blb3ljTqtsKiGHXVcMT3BlbkFJLK7U
      - DB_USERNAME=postgres
      - DB_PASSWORD=difyai123456
      - DB_HOST=dify-db
      - DB_PORT=5432
      - DB_DATABASE=dify
      - REDIS_HOST=dify-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=difyai123456
      - REDIS_DB=0
      - CELERY_BROKER_URL=redis://:difyai123456@dify-redis:6379/1
      - VECTOR_STORE=weaviate
      - WEAVIATE_ENDPOINT=http://dify-weaviate:8080
      - WEAVIATE_API_KEY=WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih
      - CODE_EXECUTION_ENDPOINT=http://dify-sandbox:8194
      - CODE_EXECUTION_API_KEY=dify-sandbox
      - PLUGIN_ENABLED=true
      - PLUGIN_DAEMON_ENDPOINT=http://dify-plugin-daemon:5003
      - PLUGIN_DAEMON_API_KEY=lYkiYYT6owG+71oLerGzA7GXCgOT++6ovaezWAjpCjf+Sjc3ZtU+qUEi
      - PLUGIN_REMOTE_INSTALL_HOST=dify-plugin-daemon
      - PLUGIN_REMOTE_INSTALL_PORT=5003
      - PLUGIN_MAX_PACKAGE_SIZE=52428800
      - INNER_API_KEY_FOR_PLUGIN=QaHbTe77CtuXmsfyhR7+vRjI/+XbV1AaFy691iy+kGDv2Jvy0/eAh8Y1
      - MIGRATION_ENABLED=true
      - WEB_API_CORS_ALLOW_ORIGINS=*
      - CONSOLE_CORS_ALLOW_ORIGINS=*
      - STORAGE_TYPE=local
      - STORAGE_LOCAL_PATH=storage
    volumes:
      - /DATA/AppData/Dify/storage:/app/api/storage
    depends_on:
      dify-init:
        condition: service_completed_successfully
      dify-db:
        condition: service_healthy
      dify-redis:
        condition: service_started
      dify-weaviate:
        condition: service_started
    restart: unless-stopped
    networks:
      - dify-network

  dify-worker:
    container_name: dify-worker
    image: langgenius/dify-api:1.4.2
    deploy:
      resources:
        reservations:
          memory: "1073741824"
        limits:
          memory: 3072M
    environment:
      - MODE=worker
      - LOG_LEVEL=INFO
      - SECRET_KEY=sk-9f73s3ljTXVcMT3Blb3ljTqtsKiGHXVcMT3BlbkFJLK7U
      - DB_USERNAME=postgres
      - DB_PASSWORD=difyai123456
      - DB_HOST=dify-db
      - DB_PORT=5432
      - DB_DATABASE=dify
      - REDIS_HOST=dify-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=difyai123456
      - REDIS_DB=0
      - CELERY_BROKER_URL=redis://:difyai123456@dify-redis:6379/1
      - VECTOR_STORE=weaviate
      - WEAVIATE_ENDPOINT=http://dify-weaviate:8080
      - WEAVIATE_API_KEY=WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih
      - PLUGIN_ENABLED=true
      - PLUGIN_DAEMON_ENDPOINT=http://dify-plugin-daemon:5003
      - PLUGIN_DAEMON_API_KEY=lYkiYYT6owG+71oLerGzA7GXCgOT++6ovaezWAjpCjf+Sjc3ZtU+qUEi
      - PLUGIN_REMOTE_INSTALL_HOST=dify-plugin-daemon
      - PLUGIN_REMOTE_INSTALL_PORT=5003
      - PLUGIN_MAX_PACKAGE_SIZE=52428800
      - INNER_API_KEY_FOR_PLUGIN=QaHbTe77CtuXmsfyhR7+vRjI/+XbV1AaFy691iy+kGDv2Jvy0/eAh8Y1
      - STORAGE_TYPE=local
      - STORAGE_LOCAL_PATH=storage
    volumes:
      - /DATA/AppData/Dify/storage:/app/api/storage
    depends_on:
      dify-init:
        condition: service_completed_successfully
      dify-db:
        condition: service_healthy
      dify-redis:
        condition: service_started
      dify-weaviate:
        condition: service_started
    restart: unless-stopped
    networks:
      - dify-network

  dify-web:
    container_name: dify-web
    image: langgenius/dify-web:1.4.2
    deploy:
      resources:
        reservations:
          memory: "536870912"
        limits:
          memory: 1536M
    environment:
      - CONSOLE_API_URL=
      - APP_API_URL=
    restart: unless-stopped
    networks:
      - dify-network

  dify-db:
    container_name: dify-db
    image: postgres:15-alpine
    deploy:
      resources:
        reservations:
          memory: "536870912"
        limits:
          memory: 1536M
    environment:
      - PGUSER=postgres
      - POSTGRES_PASSWORD=difyai123456
      - POSTGRES_DB=dify
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - /DATA/AppData/Dify/db:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - dify-network
    healthcheck:
      test:
        ["CMD", "pg_isready", "-h", "localhost", "-U", "postgres", "-d", "dify"]
      interval: 1s
      timeout: 3s
      retries: 60

  dify-redis:
    container_name: dify-redis
    image: redis:6-alpine
    deploy:
      resources:
        reservations:
          memory: "268435456"
        limits:
          memory: 768M
    volumes:
      - /DATA/AppData/Dify/redis:/data
    command: redis-server --requirepass difyai123456
    restart: unless-stopped
    networks:
      - dify-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]

  dify-weaviate:
    container_name: dify-weaviate
    image: semitechnologies/weaviate:1.19.0
    deploy:
      resources:
        reservations:
          memory: "536870912"
        limits:
          memory: 1536M
    environment:
      - QUERY_DEFAULTS_LIMIT=25
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=false
      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
      - DEFAULT_VECTORIZER_MODULE=none
      - CLUSTER_HOSTNAME=node1
      - AUTHENTICATION_APIKEY_ENABLED=true
      - AUTHENTICATION_APIKEY_ALLOWED_KEYS=WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih
      - AUTHENTICATION_APIKEY_USERS=hello@dify.ai
      - AUTHORIZATION_ADMINLIST_ENABLED=true
      - AUTHORIZATION_ADMINLIST_USERS=hello@dify.ai
    volumes:
      - /DATA/AppData/Dify/weaviate:/var/lib/weaviate
    restart: unless-stopped
    networks:
      - dify-network

  dify-sandbox:
    container_name: dify-sandbox
    image: langgenius/dify-sandbox:0.2.1
    deploy:
      resources:
        reservations:
          memory: "268435456"
        limits:
          memory: 768M
    environment:
      - API_KEY=dify-sandbox
      - GIN_MODE=release
      - WORKER_TIMEOUT=15
      - ENABLE_NETWORK=true
      - SANDBOX_PORT=8194
    volumes:
      - /DATA/AppData/Dify/sandbox:/dependencies
    depends_on:
      dify-init:
        condition: service_completed_successfully
    restart: unless-stopped
    networks:
      - dify-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8194/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  dify-plugin-daemon:
    container_name: dify-plugin-daemon
    image: langgenius/dify-plugin-daemon:0.1.2-local
    ports:
      - "5003:5003"
    deploy:
      resources:
        reservations:
          memory: "268435456"
        limits:
          memory: 768M
    environment:
      - SERVER_PORT=5002
      - SERVER_KEY=lYkiYYT6owG+71oLerGzA7GXCgOT++6ovaezWAjpCjf+Sjc3ZtU+qUEi
      - GIN_MODE=release
      - PLATFORM=local
      - DIFY_INNER_API_KEY=QaHbTe77CtuXmsfyhR7+vRjI/+XbV1AaFy691iy+kGDv2Jvy0/eAh8Y1
      - DIFY_INNER_API_URL=http://dify-api:5001
      - PLUGIN_REMOTE_INSTALLING_ENABLED=true
      - PLUGIN_REMOTE_INSTALLING_HOST=0.0.0.0
      - PLUGIN_REMOTE_INSTALLING_PORT=5003
      - PLUGIN_STORAGE_TYPE=local
      - PLUGIN_STORAGE_LOCAL_ROOT=/app/storage
      - PLUGIN_INSTALLED_PATH=plugin
      - PLUGIN_WORKING_PATH=cwd
      - PERSISTENCE_STORAGE_PATH=persistence
      - PERSISTENCE_STORAGE_MAX_SIZE=104857600
      - PLUGIN_WEBHOOK_ENABLED=true
      - ROUTINE_POOL_SIZE=1024
      - REDIS_HOST=dify-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=difyai123456
      - REDIS_DB=0
      - REDIS_USE_SENTINEL=false
      - DB_USERNAME=postgres
      - DB_PASSWORD=difyai123456
      - DB_HOST=dify-db
      - DB_PORT=5432
      - DB_DATABASE=dify_plugin
      - DB_SSL_MODE=disable
      - DB_MAX_IDLE_CONNS=10
      - DB_MAX_OPEN_CONNS=30
      - DB_CONN_MAX_LIFETIME=3600
      - DIFY_INVOCATION_CONNECTION_IDLE_TIMEOUT=120
      - MAX_PLUGIN_PACKAGE_SIZE=52428800
      - PYTHON_ENV_INIT_TIMEOUT=120
      - PPROF_ENABLED=false
      - FORCE_VERIFYING_SIGNATURE=false
      - THIRD_PARTY_SIGNATURE_VERIFICATION_ENABLED=false
      - MARKETPLACE_ENABLED=true
      - MARKETPLACE_API_URL=https://marketplace.dify.ai
      - PLUGIN_STDIO_BUFFER_SIZE=1024
      - PLUGIN_STDIO_MAX_BUFFER_SIZE=5242880
      - DIFY_BACKWARDS_INVOCATION_WRITE_TIMEOUT=5000
      - DIFY_BACKWARDS_INVOCATION_READ_TIMEOUT=240000
    volumes:
      - /DATA/AppData/Dify/plugin-daemon:/app/storage
    depends_on:
      dify-init:
        condition: service_completed_successfully
      dify-db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - dify-network

  dify:
    container_name: dify
    image: nginx:latest
    ports:
      - "3701:80"
    configs:
      - source: nginx_default_conf
        target: /etc/nginx/conf.d/default.conf
      - source: nginx_proxy_conf
        target: /etc/nginx/conf.d/proxy.conf
    depends_on:
      - dify-api
      - dify-web
    restart: unless-stopped
    networks:
      - dify-network
    labels:
      - "icon=https://raw.githubusercontent.com/langgenius/dify/main/web/public/logo/logo-site.png"
      - "homepage.group=AI Services"
      - "homepage.name=Dify"
      - "homepage.icon=https://raw.githubusercontent.com/langgenius/dify/main/web/public/logo/logo-site.png"
      - "homepage.href=http://localhost:3701"
      - "homepage.description=Open-source LLM App Development Platform"
      - "homepage.weight=5"
      - "traefik.enable=false"

networks:
  dify-network:
    driver: bridge

configs:
  python_requirements:
    content: |
      # Dify Sandbox Python Requirements
      # Basic packages for code execution
      requests>=2.25.0
      numpy>=1.21.0
      pandas>=1.3.0
      matplotlib>=3.4.0
      seaborn>=0.11.0
      scikit-learn>=1.0.0
      plotly>=5.0.0
      beautifulsoup4>=4.10.0
      lxml>=4.6.0
      openpyxl>=3.0.0
      pillow>=8.0.0
      python-dateutil>=2.8.0
      pytz>=2021.1
      scipy>=1.7.0

  nodejs_package:
    content: |
      {
        "name": "dify-sandbox-nodejs",
        "version": "1.0.0",
        "description": "Node.js dependencies for Dify sandbox",
        "dependencies": {
          "axios": "^1.3.0",
          "lodash": "^4.17.21",
          "moment": "^2.29.0",
          "cheerio": "^1.0.0-rc.12",
          "csv-parser": "^3.0.0",
          "node-fetch": "^3.3.0"
        }
      }

  nginx_default_conf:
    content: |
      server {
          listen 80;
          server_name localhost;

          location /console/api {
              proxy_pass http://dify-api:5001;
              include /etc/nginx/conf.d/proxy.conf;
          }

          location /api {
              proxy_pass http://dify-api:5001;
              include /etc/nginx/conf.d/proxy.conf;
          }

          location /v1 {
              proxy_pass http://dify-api:5001;
              include /etc/nginx/conf.d/proxy.conf;
          }

          location /files {
              proxy_pass http://dify-api:5001;
              include /etc/nginx/conf.d/proxy.conf;
          }

          location / {
              proxy_pass http://dify-web:3000;
              include /etc/nginx/conf.d/proxy.conf;
          }
      }

  nginx_proxy_conf:
    content: |
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_buffering off;
      proxy_request_buffering off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
